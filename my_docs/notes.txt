
NEW (M/D/Y -> 12/19/2018):

1# [
    1# convert the User model to use the ContainerTransform trait.
    2# convert ContainerTransform's getAll* transform methods to return 
        ComponentTree Compatible results for ContentArrays..
].

2# [
    0# create a ES2016 Iterator protocol using class for downloading assets.
    1# convert the VueJS SPA to use a ES2016 Iterator protocol with downloading assets.
    2# add a lib/themewagon/content-list style VueJS component.
    3# make use of Vue-Atlas for modals...
    4# construct and use {#this.2} to @continue@ the 
        themewagon store theme for the Admin SPA!
].


OLD:

Content Management System
-> What does it require?
-> What does it display/do?

1#from cms/categories.blade
2#->web.php 
{
   [V] reassign the web paths in the for the store and the admin.

}
3#<-
[
    cms/sections.blade [partial]
    cms/products.blade [partial]
    cms/categories.blade [partial]
    app/../CmsController.php [partial]
]

[V] todo rewrite 
[
    Section.php
    Category.php
    Product.php
    Page.php
    {etc..?}
]
to transform results of querying the DB 
into View-Usable results!

todo in 
[
    PageController@home
]
rewrite to return getView of the actual
Home Page (perhaps from the database?)
with any breadcrumbs and alerts, etc..


todo in
[
    SectionController
    CategorieController
    ProductController
] 
[ 
    1 => rewrite show() functions that returns the view 
         that displays the {item}.
         ENSURE that ALL other Resource Methods check for,
         ADMIN RIGHTS!!
    2 => figure out some way for a given user to CRUD 
         or PERSIST pagination within views...
]

todo rewrite 
[
    cart
    wishlist
]
web routes to gets.. [V]
and rewrite their associated
Controllers..